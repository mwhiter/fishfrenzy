package objects;

import core.DirectionTypes;

// Class: Player
// A player in the game world.
	// Needs to have an isHuman() flag. Because only humans will accept input from the game board
public class Player {
	private boolean bHuman;
	private int iFishCaptured;	// number of fish captured
	private int iScore;			// actual game score (could be different from fish captured
	public int tileAmmo;
	private DirectionTypes activeDirection;
	
	// Constructor
	public Player(boolean human)
	{
		bHuman = human;
		iScore = 0;
		iFishCaptured = 0;
		tileAmmo =0;
		activeDirection = NO_DIRECTION;
	}
	
	// What does it mean to update a Player? Run its AI (this is called once per frame)
	// Is this really the best thing to do? Maybe not...discuss at some point
	public void update()
	{
		// Don't update for humans because they make their own decisions
		if(!isHuman()) 
		{
			return;
		}
		
		// ai stuff here...
	}
	
	public boolean isHuman()
	{
		return bHuman;
	}
	
	public int getNumFishCaptured() { return iFishCaptured; }
	public int getScore()			{ return iScore; }
	public void incTile()			{ tileAmmo ++; }
	
	public DirectionTypes getActiveDirection() { return activeDirection; }
	public void setActiveDirection(DirectionTypes eDirection) { activeDirection = eDirection; }
}
